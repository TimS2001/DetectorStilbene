Короче в кратце...
Весь проект можно разделить на две части
Первая - вычисления отклика с помощью geant4
Вторая - АЦП для данных из geant4 с пост обработкой

Касаемо geant4 если хочется поменять размеры, расположение детектора, то есть файл headers\Construction.hh
Если хочешь изменить что-то (энергию и ионную температуру) в генераторе частиц, то открывай файл headers\generator.hh
В основном main.cc можно изменить количество частиц
Результаты записываются в data\detector_data.txt; BornTime_ns	MainTime_ns - грубо говоря время рождения вторичной частицы, относительно нейтрона
И время рождения нейтрона в глобальном времени


Касаемо АЦП и пост обработки
Из файла data\detector_data.txt читаются данные по вторичным частицам, для каждой частицы энегрия преобразуется в свет, а результатом становится
полная энергия отдачи конкретного нейтрона, смотри все в файле AD_pip\AD_converter.py
AD_pip\AD_converter_Energy_version.py - тоже самое, но без преобразований в световыход, все в шкале энергий
AD_pip\Analysis.py - файл анализа
AD_pip\Plotting.py - файл построения графиков
AD_pip\Constants.py - файл, где записаны константы, там можно поменять функцию световыхода
Plot.py - основной файл, запускать нужно его, там две основные функции импортируемые из папки AD_pip
функция ReadAndBlur(str) - работа АЦП, на выходе гистограмма
функция plotAndFind(Hist, Hist_name) - пост обработка и построение графиков
Также есть plotHist - функция чисто для построения без анализа (удобно использовать, для различных энергия не только DD/DT)